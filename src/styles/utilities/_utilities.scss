@use "sass:map";
@use "../abstracts" as *;

/* { utility classes } */

@each $key, $value in map.get($config, "aspect-ratio") {
  .u-aspect-#{$key} {
    aspect-ratio: $value;
  }
}

@each $key, $value in map.get($config, "spacing") {
  .u-flow-#{$key} {
    & > * + * {
      margin-block-start: $value;
    }
  }

  .u-m-#{$key} {
    margin: $value;
  }

  .u-mb-#{$key} {
    margin-block: $value;
  }

  .u-mbs-#{$key} {
    margin-block-start: $value;
  }

  .u-mbe-#{$key} {
    margin-block-end: $value;
  }

  .u-mi-#{$key} {
    margin-inline: $value;
  }

  .u-mis-#{$key} {
    margin-inline-start: $value;
  }

  .u-mie-#{$key} {
    margin-inline-end: $value;
  }

  .u-p-#{$key} {
    padding: $value;
  }

  .u-pb-#{$key} {
    padding-block: $value;
  }

  .u-pbs-#{$key} {
    padding-block-start: $value;
  }

  .u-pbe-#{$key} {
    padding-block-end: $value;
  }

  .u-pi-#{$key} {
    padding-inline: $value;
  }

  .u-pis-#{$key} {
    padding-inline-start: $value;
  }

  .u-pie-#{$key} {
    padding-inline-end: $value;
  }

  .u-gap-#{$key} {
    gap: $value;
  }
}

@each $key, $value in map.get($config, "width") {
  .u-is-#{str-replace($key, "/", "\\/")} {
    inline-size: $value;
  }
}

@each $key, $value in map.get($config, "height") {
  .u-bs-#{str-replace($key, "/", "\\/")} {
    block-size: $value;
  }
}

@each $key, $value in map.get($config, "font-family") {
  .u-font-#{$key} {
    font-family: $value;
  }
}

@each $key, $value in map.get($config, "font-size") {
  .u-text-#{$key} {
    font-size: $value;
  }
}

@each $key-master, $value-master in map.get($config, "color") {
  @each $key, $value in $value-master {
    .u-text-#{$key-master}-#{$key} {
      color: $value;
    }

    .u-bg-#{$key-master}-#{$key} {
      background-color: $value;
    }
  }
}

// border
[class*="u-border"] {
  border-width: map.get($config, "border-width", "DEFAULT");
  border-style: map.get($config, "border-style", "DEFAULT");
}

@each $key, $value in map.get($config, "border-width") {
  .u-border-#{$key} {
    border-width: $value;
  }
}

@each $key, $value in map.get($config, "border-style") {
  .u-border-#{$key} {
    border-style: $value;
  }
}

@each $key-master, $value-master in map.get($config, "border-color") {
  @each $key, $value in $value-master {
    .u-border-#{$key-master}-#{$key} {
      border-color: $value;
    }
  }
}

@each $key, $value in map.get($config, "border-radius") {
  .u-rounded-#{$key} {
    border-radius: $value;
  }
}

@each $key, $value in map.get($config, "overflow") {
  .u-overflow-#{$key} {
    overflow: $value;
  }
}

.u-block {
  display: block;
}

.u-inline-block {
  display: inline-block;
}

.u-inline {
  display: inline;
}

.u-hidden {
  display: none;
}

.u-sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  inline-size: 1px;
  block-size: 1px;
  margin: -1px;
  padding: 0;
  border-width: 0;
  white-space: nowrap;
}

.u-uppercase {
  text-transform: uppercase;
}

.u-font-bolder {
  font-weight: bolder;
}

.u-flex {
  display: flex;
}

.u-flex-row {
  flex-direction: row;
}

.u-flex-row-reverse {
  flex-direction: row-reverse;
}

.u-flex-col {
  flex-direction: column;
}

.u-flex-col-reverse {
  flex-direction: column-reverse;
}

.u-flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.u-flex-wrap {
  flex-wrap: wrap;
}

.u-flex-nowrap {
  flex-wrap: nowrap;
}

.u-content-between {
  justify-content: space-between;
}

.u-content-center {
  justify-content: center;
}

.u-text-center {
  text-align: center;
}

.u-text-start {
  text-align: start;
}

.u-text-end {
  text-align: end;
}

/* { end of utility classes } */
