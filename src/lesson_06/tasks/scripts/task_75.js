if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
  const SIZE = 5
  let shotsCount = 0
  const shipX = Math.floor(Math.random() * SIZE)
  const shipY = Math.floor(Math.random() * SIZE)

  // ## –ü–æ–ª–µ
  // –∫–æ–∂–µ–Ω —Ä—è–¥–æ–∫ row —Ä–µ–ø—Ä–µ–∑–µ–Ω—Ç—É—î –ø–æ–ª–µ
  // 0 - —Ü–µ –≤–æ–¥–∞, 1 - —Ü–µ –ø–æ–∑–∏—Ü—ñ—è –ø–æ—Å—Ç—Ä—ñ–ª—É
  let row0 = 100000
  let row1 = 100000
  let row2 = 100000
  let row3 = 100000
  let row4 = 100000

  for (let shotX, shotY; shotX !== shipX || shotY !== shipY; shotsCount++) {
    let battlefield = `‚öì–ú–æ—Ä—Å—å–∫–∏–π –±—ñ–π‚öì
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚öîÔ∏è1  2   3   4   5
1`

    for (let col = 0; col < SIZE; col++) {
      const currentDigit = Math.floor(row0 / 10 ** col) % 10

      if (currentDigit === 0) battlefield += 'üåä'
      else battlefield += 'üí•'
    }

    battlefield += '\n2 '

    for (let col = 0; col < SIZE; col++) {
      const currentDigit = Math.floor(row1 / 10 ** col) % 10

      if (currentDigit === 0) battlefield += 'üåä'
      else battlefield += 'üí•'
    }

    battlefield += '\n3 '

    for (let col = 0; col < SIZE; col++) {
      const currentDigit = Math.floor(row2 / 10 ** col) % 10

      if (currentDigit === 0) battlefield += 'üåä'
      else battlefield += 'üí•'
    }

    battlefield += '\n4 '

    for (let col = 0; col < SIZE; col++) {
      const currentDigit = Math.floor(row3 / 10 ** col) % 10

      if (currentDigit === 0) battlefield += 'üåä'
      else battlefield += 'üí•'
    }

    battlefield += '\n5 '

    for (let col = 0; col < SIZE; col++) {
      const currentDigit = Math.floor(row4 / 10 ** col) % 10

      if (currentDigit === 0) battlefield += 'üåä'
      else battlefield += 'üí•'
    }

    shotX =
      parseInt(prompt(`${battlefield}\n–ü–æ–∑–∏—Ü—ñ—è –ø–æ—Å—Ç—Ä—ñ–ª—É X (1-${SIZE})`, '1')) -
      1
    shotY =
      parseInt(prompt(`${battlefield}\n–ü–æ–∑–∏—Ü—ñ—è –ø–æ—Å—Ç—Ä—ñ–ª—É Y (1-${SIZE})`, '1')) -
      1

    // –¥–æ–¥–∞—Ç–∏ –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ shotY —Ç–∞ –∫–æ–ª–æ–Ω–∫–∏ shotX —Ü–∏—Ñ—Ä—É
    switch (shotY) {
      case 0:
        row0 += 10 ** shotX
        break
      case 1:
        row1 += 10 ** shotX
        break
      case 2:
        row2 += 10 ** shotX
        break
      case 3:
        row3 += 10 ** shotX
        break
      case 4:
        row4 += 10 ** shotX
        break
    }
  }

  alert(`–í —è–±–ª—É—á–∫–æ! –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—Ä—ñ–ª—ñ–≤: ${shotsCount} üí£.`)
}
